use_gpl3_license()
devtools::use_gpl3_license()
?use_gpl3_license
usethis::use_gpl3_license()
options(usethis.full_name = "Sebastian Engel-Wolf")
usethis::use_gpl3_license()
setwd("tests/testthat")
install.packages("shinytest")
getwd()
shinytest::installDependencies()
shinytest::installDependencies()
shinytest::installDependencies()
shinytest::installDependencies()
shinytest::installDependencies()
shinytest::recordTest("app_test")
shinytest::recordTest("app_test")
shinytest::recordTest("app_test")
devtools::document()
devtools::document()
shinytest::recordTest("app_test")
setwd("app_test/tests")
app <- ShinyDriver$new("../")
app$snapshotInit("mytest")
app$snapshot()
app$setInputs(`counter1-button` = "click")
app$setInputs(`counter1-button` = "click")
app$setInputs(`counter1-button` = "click")
app$setInputs(`counter1-button` = "click")
app$setInputs(`counter1-button` = "click")
app$setInputs(`counter1-button` = "click")
app$snapshot()
app <- ShinyDriver$new("../")
app$snapshotInit("mytest")
app$snapshot("mytest")
app$setInputs(`counter1-button` = "click")
app$setInputs(`counter1-button` = "click")
app$setInputs(`counter1-button` = "click")
app$setInputs(`counter1-button` = "click")
app$setInputs(`counter1-button` = "click")
app$setInputs(`counter1-button` = "click")
app$snapshot("mytest")
setwd("../..")
shinytest::recordTest("app_test")
shinytest::recordTest("app_test")
getwd()
setwd("../..")
devtools::test()
devtools::test()
devtools::test()
?skip_on_cran()
?expect_pass
devtools::test()
setwd("tests/testthat")
testApp("app_test", compareImages = FALSE, interactive = FALSE)
viewTestDiff("app_test", interactive = FALSE)
viewTestDiff("app_test", interactive = TRUE)
?viewTestDiff
viewTestDiff("app_test", "mytest", interactive = TRUE)
viewTestDiff("app_test", "mytest", interactive = FALSE)
textTestDiff("app_test", "mytest", interactive = FALSE)
textTestDiff("app_test", "mytest")
textTestDiff("app_test", "mytest", images = FALSE)
?textTestDiff
appDir <- "app_test"
testname <- "mytest"
current_dir  <- file.path(appDir, "tests", paste0(testname, "-current"))
expected_dir <- file.path(appDir, "tests", paste0(testname, "-expected"))
current_dir
filter_fun <- remove_image_hashes_and_files
filter_fun <- shinytest:::remove_image_hashes_and_files
diff_files(expected_dir, current_dir, filter_fun)
shinytest:::diff_files(expected_dir, current_dir, filter_fun)
shinytest:::diff_files(list.files(expected_dir), list.files(current_dir))
getwd()
list.files(expected_dir)
list.files(expected_dir, pattern = ".json")
shinytest:::diff_files(list.files(expected_dir, pattern = ".json"), list.files(expected_dir, pattern = ".json"))
?diff_files
file1 <-list.files(expected_dir, pattern = ".json")[1]
file2 <-list.files(current_dir, pattern = ".json")[1]
diff_prog <- which_diff()
diff_prog <- shinytest:::which_diff()
tmp_dir <- tempfile("shinytest-diff-")
dir.create(tmp_dir)
on.exit(unlink(tmp_dir, recursive = TRUE))
out_file <- file.path(tmp_dir, "shinytest-diff-output.txt")
working_dir <- getwd()
withr::with_dir(working_dir,
{
p <- process$new(
command = shinytest:::which_diff(),
stdout = out_file,
args = c(file1, file2)
)
}
)
p$wait(timeout = 5000)
p$kill()
?process
withr::with_dir(working_dir,
{
p <- processx::process$new(
command = shinytest:::which_diff(),
stdout = out_file,
args = c(file1, file2)
)
}
)
p$wait(timeout = 5000)
p$kill()
p$get_exit_status()
p$get_cmdline()
p$get_result()
out_file
system(paste("open", out_file))
file1
file2
file1 <-list.files(expected_dir, pattern = ".json", full.names = T)[1]
file1
file2 <-list.files(current_dir, pattern = ".json", full.names = T)[1]
withr::with_dir(working_dir,
{
p <- processx::process$new(
command = shinytest:::which_diff(),
stdout = out_file,
args = c(file1, file2)
)
}
)
p$wait(timeout = 5000)
p$kill()
p$get_exit_status()
working_dir
shinytest:::which_diff()
system(shinytest:::which_diff()
)
system(paste(shinytest:::which_diff(), "/h"))
system(paste(shinytest:::which_diff(), "--help"))
system(paste(shinytest:::which_diff(), file1, file2))
withr::with_dir(working_dir, system(paste(shinytest:::which_diff(), file1, file2)))
file1 <-list.files(expected_dir, pattern = ".json", full.names = T, include.dirs = T)[1]
file1
file1 <-file.path(
expected_dir,
list.files(expected_dir, pattern = ".json", full.names = T, include.dirs = T)[1]
)
file2 <-file.path(
current_dir,
list.files(current_dir, pattern = ".json", full.names = T)[1]
)
withr::with_dir(working_dir, system(paste(shinytest:::which_diff(), file1, file2)))
file1
file1 <-file.path(
working_dir,
list.files(expected_dir, pattern = ".json", full.names = T, include.dirs = T)[1]
)
file2 <-file.path(
working_dir,
list.files(current_dir, pattern = ".json", full.names = T)[1]
)
withr::with_dir(working_dir, system(paste(shinytest:::which_diff(), file1, file2)))
file1
system(paste(shinytest:::which_diff(), file1, file2))
system(paste(shinytest:::which_diff(), paste0("'",file1,"'"), file2))
system(paste(shinytest:::which_diff(), paste0("'",file1,"'"), file2))
paste(shinytest:::which_diff(), paste0("'",file1,"'"), file2)
paste(shinytest:::which_diff(), paste0("'",file1,"'"), paste0("'",file1,"'"))
system(paste(shinytest:::which_diff(), paste0("'",file1,"'"), paste0("'",file1,"'")))
system(paste(shinytest:::which_diff(), gsub(pattern = "/", replacement = "\\", paste0("'",file1,"'")), paste0("'",file1,"'")))
system(paste(shinytest:::which_diff(), gsub(pattern = "/", replacement = "\\\\", paste0("'",file1,"'")), paste0("'",file1,"'")))
paste(shinytest:::which_diff(), gsub(pattern = "/", replacement = "\\", paste0("'",file1,"'")), paste0("'",file1,"'"))
system(paste(shinytest:::which_diff(),
gsub(pattern = "/", replacement = "\\\\", paste0("'",file1,"'")),
gsub(pattern = "/", replacement = "\\\\", paste0("'",file1,"'"))
))
gsub(pattern = "/", replacement = "\\\\", paste0("'",file1,"'"))
system(paste("fc",
gsub(pattern = "/", replacement = "\\\\", paste0("'",file1,"'")),
gsub(pattern = "/", replacement = "\\\\", paste0("'",file2,"'"))
))
paste("fc",
gsub(pattern = "/", replacement = "\\\\", paste0("'",file1,"'")),
gsub(pattern = "/", replacement = "\\\\", paste0("'",file2,"'"))
)
cat(paste("fc",
gsub(pattern = "/", replacement = "\\\\", paste0("'",file1,"'")),
gsub(pattern = "/", replacement = "\\\\", paste0("'",file2,"'"))
))
cat(paste("fc",
gsub(pattern = "/", replacement = "\\\\", file1)),
gsub(pattern = "/", replacement = "\\\\", file2))
))
cat(paste("fc",
gsub(pattern = "/", replacement = "\\\\", file1),
gsub(pattern = "/", replacement = "\\\\", file2)
))
system(paste("fc",
gsub(pattern = "/", replacement = "\\\\", file1),
gsub(pattern = "/", replacement = "\\\\", file2)
))
Sys.info()
current_dir  <- file.path(appDir, "tests", paste0(testname, "-current"))
expected_dir <- file.path(appDir, "tests", paste0(testname, "-expected"))
file1 <-file.path(
working_dir,
list.files(expected_dir, pattern = ".json", full.names = T, include.dirs = T)
)
file2 <-file.path(
working_dir,
list.files(current_dir, pattern = ".json", full.names = T)
)
for (i in 1:length(file1)) {
system(paste("fc",
gsub(pattern = "/", replacement = "\\\\", file1[i]),
gsub(pattern = "/", replacement = "\\\\", file2[i])
))
}
getwd()
setwd("../..")
# Use compareImages=FALSE because the expected image screenshots were created
# on a Mac, and they will differ from screenshots taken on the CI platform,
# which runs on Linux.
test_result <- testApp("app_test", compareImages = FALSE, interactive = FALSE)
setwd("tests/testthat")
# Use compareImages=FALSE because the expected image screenshots were created
# on a Mac, and they will differ from screenshots taken on the CI platform,
# which runs on Linux.
test_result <- testApp("app_test", compareImages = FALSE, interactive = FALSE)
setwd("../..")
devtools::test()
devtools::test()
setwd("tests/testthat")
# Use compareImages=FALSE because the expected image screenshots were created
# on a Mac, and they will differ from screenshots taken on the CI platform,
# which runs on Linux.
test_result <- testApp("app_test", compareImages = FALSE, interactive = FALSE)
test_result$results
lapply(test_result$results, `[[`, "pass")
unlist(lapply(test_result$results, `[[`, "pass"))
all(unlist(lapply(test_result$results, `[[`, "pass")))
setwd("../..")
devtools::test()
devtools::test()
devtools::test()
